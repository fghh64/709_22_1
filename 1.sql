drop table if exists taxi_drivers, orders CASCADE;

CREATE Table taxi_drivers
(
    id_ int primary key generated by default as identity,
    name_ text,
    sname_ text,
    number_ text,
    car text
);

CREATE Table orders
(
    id_orders int primary key generated by DEFAULT as identity,
    name_orders text,
    data_orders date,
    price_orders money,
    shipping_address text,
    destination_address text,
    id_ int,
    FOREIGN KEY (id_) REFERENCES taxi_drivers (id_)
);

INSERT into taxi_drivers(name_, sname_, number_, car)
VALUES('петя', 'васильев', '8-800-555-35-35', 'бмв'),
        ('вася', 'петренко', '8-923-241-94-11', 'макларен');

INSERT into orders(name_orders, data_orders, price_orders, shipping_address, destination_address, id_)
VALUES  ('перевозка', '1999-11-01', 20, 'сочи', 'фт сириус', 1),
        ('поездка', '2024-12-30', 300, 'воскресенская 12', 'олимпийский проспект 9', 2),
        ('поездка с ребенком', '2000-01-27', 10000, 'фт сириус', 'кавказ', 1);
    
SELECT taxi_drivers.name_, taxi_drivers.sname_, taxi_drivers.number_, taxi_drivers.car, COALESCE(json_agg(json_build_object(
    'название заказа', name_orders, 'дата заказа', data_orders, 'цена заказа', price_orders, 'отправление', shipping_address, 'назначение', destination_address))
    FILTER(WHERE orders.id_orders is not NULL), '[]')
    from taxi_drivers
    LEFT JOIN orders on orders.id_ = taxi_drivers.id_
    GROUP BY taxi_drivers.id_;
    
    -- Нехорошев Артём

