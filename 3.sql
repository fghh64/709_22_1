drop table if exists courses, reviews CASCADE;

CREATE Table courses
(
    id_ int primary key generated by default as identity,
    name_ text,
    descripion text
);

CREATE Table reviews
(
    id_reviews int primary key generated by DEFAULT as identity,
    text_reviews text,
    grade_courses int,
    id_ int,
    FOREIGN KEY (id_) REFERENCES courses (id_)
);

INSERT into courses(name_, descripion)
VALUES('танцор', 'научим танцевать за 3 года'),
        ('програмист', 'научим за 2 дня');

INSERT into reviews(text_reviews, grade_courses, id_)
VALUES  ('класный курс', 5, 1),
        ('лучший курс', 1000000, 2),
        ('научили двигать руками за 3 года', 0, 1);
    
SELECT courses.name_, courses.descripion, COALESCE(json_agg(json_build_object(
    'отзыв', text_reviews, 'оценка', grade_courses))
    FILTER(WHERE reviews.id_reviews is not NULL), '[]')
    from courses
    LEFT JOIN reviews on reviews.id_ = courses.id_
    GROUP BY courses.id_;

-- Нехорошев Артём
